class VulnerabilityEoEsController < ApplicationController
  before_action :set_vulnerability_eo_e, only: %i[ show edit update destroy ]

  # GET /vulnerability_eo_es or /vulnerability_eo_es.json
  def index
    @vulnerability_eo_es = VulnerabilityEoE.all
  end

  # GET /vulnerability_eo_es/1 or /vulnerability_eo_es/1.json
  def show
  end

  # GET /vulnerability_eo_es/new
  def new
    @vulnerability_eo_e = VulnerabilityEoE.new
  end

  # GET /vulnerability_eo_es/1/edit
  def edit
  end

  # POST /vulnerability_eo_es or /vulnerability_eo_es.json
  def create
    @vulnerability_eo_e = VulnerabilityEoE.new(vulnerability_eo_e_params)

    respond_to do |format|
      if @vulnerability_eo_e.save
        format.html { redirect_to vulnerability_eo_e_url(@vulnerability_eo_e), notice: "Vulnerability eo e was successfully created." }
        format.json { render :show, status: :created, location: @vulnerability_eo_e }
      else
        format.html { render :new, status: :unprocessable_entity }
        format.json { render json: @vulnerability_eo_e.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /vulnerability_eo_es/1 or /vulnerability_eo_es/1.json
  def update
    respond_to do |format|
      if @vulnerability_eo_e.update(vulnerability_eo_e_params)
        format.html { redirect_to vulnerability_eo_e_url(@vulnerability_eo_e), notice: "Vulnerability eo e was successfully updated." }
        format.json { render :show, status: :ok, location: @vulnerability_eo_e }
      else
        format.html { render :edit, status: :unprocessable_entity }
        format.json { render json: @vulnerability_eo_e.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /vulnerability_eo_es/1 or /vulnerability_eo_es/1.json
  def destroy
    @vulnerability_eo_e.destroy!

    respond_to do |format|
      format.html { redirect_to vulnerability_eo_es_url, notice: "Vulnerability eo e was successfully destroyed." }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_vulnerability_eo_e
      @vulnerability_eo_e = VulnerabilityEoE.find(params[:id])
    end

    # Only allow a list of trusted parameters through.
    def vulnerability_eo_e_params
      params.require(:vulnerability_eo_e).permit(:name, :score)
    end
end
